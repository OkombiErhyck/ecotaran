{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dobre\\\\OneDrive\\\\Desktop\\\\Erhyck\\\\Eco Taran\\\\my-app\\\\src\\\\placesearch.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlaceSearch = () => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  useEffect(() => {\n    fetchPlaces();\n  }, []);\n  const fetchPlaces = async () => {\n    try {\n      // Fetch places from your server-side API endpoint\n      const response = await fetch('/api/places');\n      const data = await response.json();\n      setSearchResults(data);\n    } catch (error) {\n      console.error('Error fetching places:', error);\n    }\n  };\n  const handleSearch = () => {\n    const filteredPlaces = searchResults.filter(place => place.title.toLowerCase().startsWith(searchTerm.toLowerCase().slice(0, 3)));\n    setSearchResults(filteredPlaces);\n  };\n  const handleChange = e => {\n    setSearchTerm(e.target.value);\n    handleSearch();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search by title...\",\n      value: searchTerm,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: searchResults.map(place => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: place.title\n      }, place._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(PlaceSearch, \"Nh4Vj0xM68K3INbdXX/HosOguho=\");\n_c = PlaceSearch;\nexport default PlaceSearch;\nvar _c;\n$RefreshReg$(_c, \"PlaceSearch\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","PlaceSearch","_s","searchTerm","setSearchTerm","searchResults","setSearchResults","fetchPlaces","response","fetch","data","json","error","console","handleSearch","filteredPlaces","filter","place","title","toLowerCase","startsWith","slice","handleChange","e","target","value","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","_id","_c","$RefreshReg$"],"sources":["C:/Users/dobre/OneDrive/Desktop/Erhyck/Eco Taran/my-app/src/placesearch.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst PlaceSearch = () => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [searchResults, setSearchResults] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchPlaces();\r\n  }, []);\r\n\r\n  const fetchPlaces = async () => {\r\n    try {\r\n      // Fetch places from your server-side API endpoint\r\n      const response = await fetch('/api/places');\r\n      const data = await response.json();\r\n      setSearchResults(data);\r\n    } catch (error) {\r\n      console.error('Error fetching places:', error);\r\n    }\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    const filteredPlaces = searchResults.filter(place =>\r\n      place.title.toLowerCase().startsWith(searchTerm.toLowerCase().slice(0, 3))\r\n    );\r\n    setSearchResults(filteredPlaces);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setSearchTerm(e.target.value);\r\n    handleSearch();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search by title...\"\r\n        value={searchTerm}\r\n        onChange={handleChange}\r\n      />\r\n\r\n      <ul>\r\n        {searchResults.map(place => (\r\n          <li key={place._id}>{place.title}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlaceSearch;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACdS,WAAW,EAAE;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAa,CAAC;MAC3C,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;MAClCL,gBAAgB,CAACI,IAAI,CAAC;IACxB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,MAAME,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,cAAc,GAAGV,aAAa,CAACW,MAAM,CAACC,KAAK,IAC/CA,KAAK,CAACC,KAAK,CAACC,WAAW,EAAE,CAACC,UAAU,CAACjB,UAAU,CAACgB,WAAW,EAAE,CAACE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAC3E;IACDf,gBAAgB,CAACS,cAAc,CAAC;EAClC,CAAC;EAED,MAAMO,YAAY,GAAIC,CAAC,IAAK;IAC1BnB,aAAa,CAACmB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAC7BX,YAAY,EAAE;EAChB,CAAC;EAED,oBACEd,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MACE2B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,oBAAoB;MAChCH,KAAK,EAAEtB,UAAW;MAClB0B,QAAQ,EAAEP;IAAa;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACvB,eAEFjC,OAAA;MAAA0B,QAAA,EACGrB,aAAa,CAAC6B,GAAG,CAACjB,KAAK,iBACtBjB,OAAA;QAAA0B,QAAA,EAAqBT,KAAK,CAACC;MAAK,GAAvBD,KAAK,CAACkB,GAAG;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACnB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAEV,CAAC;AAAC/B,EAAA,CA/CID,WAAW;AAAAmC,EAAA,GAAXnC,WAAW;AAiDjB,eAAeA,WAAW;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}