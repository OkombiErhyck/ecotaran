{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dobre\\\\OneDrive\\\\Desktop\\\\Erhyck\\\\Eco Taran\\\\my-app\\\\src\\\\placesearch.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlaceSearch = () => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  useEffect(() => {\n    fetchPlaces();\n  }, []);\n  const fetchPlaces = async () => {\n    try {\n      // Fetch places from your server-side API endpoint using Axios\n      const response = await axios.get('/places');\n      setSearchResults(response.data);\n    } catch (error) {\n      console.error('Error fetching places:', error);\n    }\n  };\n  const handleSearch = () => {\n    const filteredPlaces = searchResults.filter(place => {\n      const title = place.title.toLowerCase();\n      const typedLetters = searchTerm.toLowerCase().split('');\n      let matchString = '';\n      let matchedLetters = '';\n      for (let i = 0; i < title.length; i++) {\n        if (title[i] === typedLetters[0]) {\n          matchString += title[i];\n          typedLetters.shift();\n          matchedLetters += title[i];\n        } else if (matchString.length > 0) {\n          matchString += title[i];\n        }\n      }\n      place.matchedLetters = matchedLetters;\n      return matchString === searchTerm.toLowerCase();\n    });\n    setSearchResults(filteredPlaces);\n  };\n  const handleChange = e => {\n    setSearchTerm(e.target.value);\n    handleSearch();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search by title...\",\n      value: searchTerm,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: searchResults.map(place => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [place.title, place.matchedLetters && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            marginLeft: '0.5rem',\n            fontStyle: 'italic'\n          },\n          children: [\"(Matched: \", place.matchedLetters, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this)]\n      }, place._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(PlaceSearch, \"Nh4Vj0xM68K3INbdXX/HosOguho=\");\n_c = PlaceSearch;\nexport default PlaceSearch;\nvar _c;\n$RefreshReg$(_c, \"PlaceSearch\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","PlaceSearch","_s","searchTerm","setSearchTerm","searchResults","setSearchResults","fetchPlaces","response","get","data","error","console","handleSearch","filteredPlaces","filter","place","title","toLowerCase","typedLetters","split","matchString","matchedLetters","i","length","shift","handleChange","e","target","value","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","style","marginLeft","fontStyle","_id","_c","$RefreshReg$"],"sources":["C:/Users/dobre/OneDrive/Desktop/Erhyck/Eco Taran/my-app/src/placesearch.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst PlaceSearch = () => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [searchResults, setSearchResults] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchPlaces();\r\n  }, []);\r\n\r\n  const fetchPlaces = async () => {\r\n    try {\r\n      // Fetch places from your server-side API endpoint using Axios\r\n      const response = await axios.get('/places');\r\n      setSearchResults(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching places:', error);\r\n    }\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    const filteredPlaces = searchResults.filter(place => {\r\n      const title = place.title.toLowerCase();\r\n      const typedLetters = searchTerm.toLowerCase().split('');\r\n\r\n      let matchString = '';\r\n      let matchedLetters = '';\r\n\r\n      for (let i = 0; i < title.length; i++) {\r\n        if (title[i] === typedLetters[0]) {\r\n          matchString += title[i];\r\n          typedLetters.shift();\r\n          matchedLetters += title[i];\r\n        } else if (matchString.length > 0) {\r\n          matchString += title[i];\r\n        }\r\n      }\r\n\r\n      place.matchedLetters = matchedLetters;\r\n      return matchString === searchTerm.toLowerCase();\r\n    });\r\n\r\n    setSearchResults(filteredPlaces);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setSearchTerm(e.target.value);\r\n    handleSearch();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search by title...\"\r\n        value={searchTerm}\r\n        onChange={handleChange}\r\n      />\r\n\r\n      <ul>\r\n        {searchResults.map(place => (\r\n          <li key={place._id}>\r\n            {place.title}\r\n            {place.matchedLetters && (\r\n              <span style={{ marginLeft: '0.5rem', fontStyle: 'italic' }}>\r\n                (Matched: {place.matchedLetters})\r\n              </span>\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlaceSearch;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}