{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dobre\\\\OneDrive\\\\Desktop\\\\Erhyck\\\\Eco Taran\\\\my-app\\\\src\\\\CartLink.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport cos from \"./images/cos.png\";\nimport { UserContext } from \"./UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartLink = () => {\n  _s();\n  const [refreshKey, setRefreshKey] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    cart\n  } = useContext(UserContext);\n  useEffect(() => {\n    if (cart.length > 0) {\n      setIsLoading(true); // Start the loading animation\n\n      // Simulate an asynchronous reload\n      setTimeout(() => {\n        setIsLoading(false); // Stop the loading animation\n        setRefreshKey(prevKey => prevKey + 1); // Update the refresh key to trigger component reload\n      }, 1000);\n    }\n  }, [cart]);\n  const cartQuantity = cart.reduce((total, item) => total + item.quantity, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"navbar-left\",\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-animation\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/CartPage\",\n      className: \"nav-link\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: cos,\n        alt: \"cos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"cart-quantity\",\n        children: cartQuantity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, refreshKey, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(CartLink, \"iYbesnJWUDCGwiBMXYJvVOduuvM=\");\n_c = CartLink;\nexport default CartLink;\nvar _c;\n$RefreshReg$(_c, \"CartLink\");","map":{"version":3,"names":["React","useEffect","useState","useContext","Link","cos","UserContext","jsxDEV","_jsxDEV","CartLink","_s","refreshKey","setRefreshKey","isLoading","setIsLoading","cart","length","setTimeout","prevKey","cartQuantity","reduce","total","item","quantity","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/dobre/OneDrive/Desktop/Erhyck/Eco Taran/my-app/src/CartLink.jsx"],"sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport cos from \"./images/cos.png\";\r\nimport { UserContext } from \"./UserContext\";\r\n\r\nconst CartLink = () => {\r\n  const [refreshKey, setRefreshKey] = useState(0);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const { cart } = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    if (cart.length > 0) {\r\n      setIsLoading(true); // Start the loading animation\r\n\r\n      // Simulate an asynchronous reload\r\n      setTimeout(() => {\r\n        setIsLoading(false); // Stop the loading animation\r\n        setRefreshKey((prevKey) => prevKey + 1); // Update the refresh key to trigger component reload\r\n      }, 1000);\r\n    }\r\n  }, [cart]);\r\n\r\n  const cartQuantity = cart.reduce((total, item) => total + item.quantity, 0);\r\n\r\n  return (\r\n    <div className=\"navbar-left\" key={refreshKey}>\r\n     {isLoading ? (\r\n            <div className=\"loading-animation\">\r\n                            <div className=\"spinner\"></div>\r\n                            \r\n                            </div>              \r\n        ) : (\r\n      <Link to=\"/CartPage\" className=\"nav-link\">\r\n        <img src={cos} alt=\"cos\" />\r\n        \r\n          <span className=\"cart-quantity\">{cartQuantity}</span>\r\n        \r\n      </Link>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartLink;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,GAAG,MAAM,kBAAkB;AAClC,SAASC,WAAW,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAM;IAAEa;EAAK,CAAC,GAAGZ,UAAU,CAACG,WAAW,CAAC;EAExCL,SAAS,CAAC,MAAM;IACd,IAAIc,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;MACnBF,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;;MAEpB;MACAG,UAAU,CAAC,MAAM;QACfH,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;QACrBF,aAAa,CAAEM,OAAO,IAAKA,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;MAC3C,CAAC,EAAE,IAAI,CAAC;IACV;EACF,CAAC,EAAE,CAACH,IAAI,CAAC,CAAC;EAEV,MAAMI,YAAY,GAAGJ,IAAI,CAACK,MAAM,CAAC,CAACC,KAAK,EAAEC,IAAI,KAAKD,KAAK,GAAGC,IAAI,CAACC,QAAQ,EAAE,CAAC,CAAC;EAE3E,oBACEf,OAAA;IAAKgB,SAAS,EAAC,aAAa;IAAAC,QAAA,EAC1BZ,SAAS,gBACHL,OAAA;MAAKgB,SAAS,EAAC,mBAAmB;MAAAC,QAAA,eAClBjB,OAAA;QAAKgB,SAAS,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAO;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEzB,gBAE5BrB,OAAA,CAACJ,IAAI;MAAC0B,EAAE,EAAC,WAAW;MAACN,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACvCjB,OAAA;QAAKuB,GAAG,EAAE1B,GAAI;QAAC2B,GAAG,EAAC;MAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAEzBrB,OAAA;QAAMgB,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAEN;MAAY;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAGxD,GAb+BlB,UAAU;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QActC;AAEV,CAAC;AAACnB,EAAA,CArCID,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AAuCd,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}